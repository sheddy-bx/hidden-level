{"version":3,"file":"main.js","sources":["../src/main.ts"],"sourcesContent":["import { Opening } from \"../../types/opening\";\n\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  const BASE_URL = \"https://hidden-level.vercel.app\";\n  const loader = document.querySelector<HTMLElement>(\"[dev-target=loader]\");\n  const rolesWrapper = document.querySelector<HTMLElement>(\n    \"[dev-target=roles-wrapper]\"\n  );\n  const rolesList = rolesWrapper?.querySelector<HTMLElement>(\n    \"[dev-target=roles-list]\"\n  );\n  const categoryItemTemplate = rolesWrapper?.querySelector<HTMLElement>(\n    \"[dev-target=category-item-template]\"\n  );\n\n  if (!rolesWrapper || !rolesList || !categoryItemTemplate || !loader) {\n    return console.error(\n      \"Roles wrapper, roles list or loader or category item template not found\"\n    );\n  }\n\n  try {\n    const openings = await getAllRoles();\n    console.log({ openings });\n    rolesUiInit({\n      openings,\n      rolesList,\n      categoryItemTemplate,\n      rolesWrapper,\n      loader,\n    });\n  } catch (error) {\n    console.error(\"Error fetching openings:\", error);\n  }\n\n  function rolesUiInit({\n    openings,\n    rolesList,\n    categoryItemTemplate,\n    rolesWrapper,\n    loader,\n  }: {\n    openings: Opening;\n    rolesWrapper: HTMLElement;\n    rolesList: HTMLElement;\n    categoryItemTemplate: HTMLElement;\n    loader: HTMLElement;\n  }) {\n    rolesList.innerHTML = \"\";\n    Object.entries(openings)\n      .sort(([categoryA], [categoryB]) => {\n        if (categoryA === \"Others\") return 1; // Move \"Others\" to the end\n        if (categoryB === \"Others\") return -1;\n        return categoryA.localeCompare(categoryB); // Sort alphabetically\n      })\n      .forEach(([category, roles]) => {\n        const categoryItem = categoryItemTemplate.cloneNode(\n          true\n        ) as HTMLElement;\n        const categoryQuestion = categoryItem.querySelector<HTMLElement>(\n          \"[dev-target=category-question]\"\n        );\n        const categoryName = categoryItem.querySelector<HTMLElement>(\n          \"[dev-target=category-name]\"\n        );\n        const categoryRolesList = categoryItem.querySelector<HTMLElement>(\n          \"[dev-target=category-roles-list]\"\n        );\n        const roleItemTemplate = categoryItem.querySelector<HTMLElement>(\n          \"[dev-target=role-item-template]\"\n        );\n\n        if (\n          !categoryName ||\n          !categoryRolesList ||\n          !roleItemTemplate ||\n          !categoryQuestion\n        ) {\n          return console.error(\n            \"Category name, roles list or categoryQuestion or role item template not found\"\n          );\n        }\n\n        categoryName.textContent = category;\n        categoryRolesList.innerHTML = \"\";\n        roles\n          .sort((a, b) => a.jobTitle.localeCompare(b.jobTitle))\n          .forEach((role) => {\n            const roleItem = roleItemTemplate.cloneNode(true) as HTMLElement;\n            const roleTitle =\n              roleItem.querySelector<HTMLElement>(\"[dev-target=title]\");\n            const roleType =\n              roleItem.querySelector<HTMLElement>(\"[dev-target=type]\");\n            const roleLocation = roleItem.querySelector<HTMLElement>(\n              \"[dev-target=location]\"\n            );\n            const roleLink =\n              roleItem.querySelector<HTMLAnchorElement>(\"[dev-target=link]\");\n\n            if (!roleTitle || !roleType || !roleLocation || !roleLink) {\n              return console.error(\n                \"Role title, type, location or link not found\"\n              );\n            }\n            roleTitle.textContent = role.jobTitle;\n            if (role.workerTypeCode) {\n              roleType.textContent = role.workerTypeCode;\n            } else {\n              // roleType.parentElement?.previousElementSibling?.remove();\n              // roleType.parentElement?.remove();\n              roleType.textContent = \"\";\n            }\n            roleLocation.textContent = `${role.cityName}, ${role.codeValue}`;\n            roleLink.href = role.openingLink;\n\n            categoryRolesList.appendChild(roleItem);\n          });\n\n        categoryQuestion.addEventListener(\"click\", function () {\n          if (\n            categoryRolesList.style.height === \"0px\" ||\n            categoryRolesList.style.height === \"\"\n          ) {\n            // Expand\n            categoryRolesList.style.height =\n              categoryRolesList.scrollHeight + \"px\";\n          } else {\n            // Collapse\n            categoryRolesList.style.height = \"0px\";\n          }\n        });\n\n        rolesList.appendChild(categoryItem);\n      });\n    toggleHideElement({ element: loader, toggle: \"hide\" });\n    toggleHideElement({ element: rolesWrapper, toggle: \"show\" });\n  }\n\n  async function getAllRoles() {\n    try {\n      const response = await fetch(`${BASE_URL}/api/openings`);\n      const openings: Opening = await response.json();\n      return openings;\n    } catch (error) {\n      console.error(\"Error fetching openings:\", error);\n      throw error;\n    }\n  }\n  function toggleHideElement({\n    element,\n    toggle,\n  }: {\n    element: HTMLElement;\n    toggle: \"show\" | \"hide\";\n  }) {\n    if (toggle === \"show\") {\n      element.setAttribute(\"dev-hide\", \"false\");\n    } else {\n      element.setAttribute(\"dev-hide\", \"true\");\n    }\n  }\n});\n"],"names":["BASE_URL","loader","rolesWrapper","rolesList","categoryItemTemplate","openings","getAllRoles","rolesUiInit","error","categoryA","categoryB","category","roles","categoryItem","categoryQuestion","categoryName","categoryRolesList","roleItemTemplate","a","b","role","roleItem","roleTitle","roleType","roleLocation","roleLink","toggleHideElement","element","toggle"],"mappings":"AAEA,SAAS,iBAAiB,mBAAoB,SAAY,CACxD,MAAMA,EAAW,kCACXC,EAAS,SAAS,cAA2B,qBAAqB,EAClEC,EAAe,SAAS,cAC5B,4BACF,EACMC,EAAYD,GAAA,YAAAA,EAAc,cAC9B,2BAEIE,EAAuBF,GAAA,YAAAA,EAAc,cACzC,uCAGF,GAAI,CAACA,GAAgB,CAACC,GAAa,CAACC,GAAwB,CAACH,EAC3D,OAAO,QAAQ,MACb,yEACF,EAGE,GAAA,CACI,MAAAI,EAAW,MAAMC,EAAY,EAC3B,QAAA,IAAI,CAAE,SAAAD,EAAU,EACZE,EAAA,CACV,SAAAF,EACA,UAAAF,EACA,qBAAAC,EACA,aAAAF,EACA,OAAAD,CAAA,CACD,QACMO,EAAO,CACN,QAAA,MAAM,2BAA4BA,CAAK,CAAA,CAGjD,SAASD,EAAY,CACnB,SAAAF,EACA,UAAAF,EACA,qBAAAC,EACA,aAAAF,EACA,OAAAD,CAAA,EAOC,CACDE,EAAU,UAAY,GACf,OAAA,QAAQE,CAAQ,EACpB,KAAK,CAAC,CAACI,CAAS,EAAG,CAACC,CAAS,IACxBD,IAAc,SAAiB,EAC/BC,IAAc,SAAiB,GAC5BD,EAAU,cAAcC,CAAS,CACzC,EACA,QAAQ,CAAC,CAACC,EAAUC,CAAK,IAAM,CAC9B,MAAMC,EAAeT,EAAqB,UACxC,EACF,EACMU,EAAmBD,EAAa,cACpC,gCACF,EACME,EAAeF,EAAa,cAChC,4BACF,EACMG,EAAoBH,EAAa,cACrC,kCACF,EACMI,EAAmBJ,EAAa,cACpC,iCACF,EAEA,GACE,CAACE,GACD,CAACC,GACD,CAACC,GACD,CAACH,EAED,OAAO,QAAQ,MACb,+EACF,EAGFC,EAAa,YAAcJ,EAC3BK,EAAkB,UAAY,GAC9BJ,EACG,KAAK,CAACM,EAAGC,IAAMD,EAAE,SAAS,cAAcC,EAAE,QAAQ,CAAC,EACnD,QAASC,GAAS,CACX,MAAAC,EAAWJ,EAAiB,UAAU,EAAI,EAC1CK,EACJD,EAAS,cAA2B,oBAAoB,EACpDE,EACJF,EAAS,cAA2B,mBAAmB,EACnDG,EAAeH,EAAS,cAC5B,uBACF,EACMI,EACJJ,EAAS,cAAiC,mBAAmB,EAE/D,GAAI,CAACC,GAAa,CAACC,GAAY,CAACC,GAAgB,CAACC,EAC/C,OAAO,QAAQ,MACb,8CACF,EAEFH,EAAU,YAAcF,EAAK,SACzBA,EAAK,eACPG,EAAS,YAAcH,EAAK,eAI5BG,EAAS,YAAc,GAEzBC,EAAa,YAAc,GAAGJ,EAAK,QAAQ,KAAKA,EAAK,SAAS,GAC9DK,EAAS,KAAOL,EAAK,YAErBJ,EAAkB,YAAYK,CAAQ,CAAA,CACvC,EAEcP,EAAA,iBAAiB,QAAS,UAAY,CAEnDE,EAAkB,MAAM,SAAW,OACnCA,EAAkB,MAAM,SAAW,GAGjBA,EAAA,MAAM,OACtBA,EAAkB,aAAe,KAGnCA,EAAkB,MAAM,OAAS,KACnC,CACD,EAEDb,EAAU,YAAYU,CAAY,CAAA,CACnC,EACHa,EAAkB,CAAE,QAASzB,EAAQ,OAAQ,OAAQ,EACrDyB,EAAkB,CAAE,QAASxB,EAAc,OAAQ,OAAQ,CAAA,CAG7D,eAAeI,GAAc,CACvB,GAAA,CAGK,OADmB,MADT,MAAM,MAAM,GAAGN,CAAQ,eAAe,GACd,KAAK,QAEvCQ,EAAO,CACN,cAAA,MAAM,2BAA4BA,CAAK,EACzCA,CAAA,CACR,CAEF,SAASkB,EAAkB,CACzB,QAAAC,EACA,OAAAC,CAAA,EAIC,CACGA,IAAW,OACLD,EAAA,aAAa,WAAY,OAAO,EAEhCA,EAAA,aAAa,WAAY,MAAM,CACzC,CAEJ,CAAC"}